diff -ruN node_modules/@testing-library/svelte/src/core/index.js vendor-node/@testing-library/svelte/src/core/index.js
--- node_modules/@testing-library/svelte/src/core/index.js	2024-12-07 18:12:30.379030541 +0000
+++ vendor-node/@testing-library/svelte/src/core/index.js	2024-12-07 18:09:13.460839420 +0000
@@ -6,7 +6,7 @@
  * if it looks like we're in a Svelte <= 4 environment.
  */
 import * as LegacyCore from './legacy.js'
-import * as ModernCore from './modern.svelte.js'
+import * as ModernCore from './modern.js'
 import {
   createValidateOptions,
   UnknownSvelteOptionsError,
diff -ruN node_modules/@testing-library/svelte/src/core/modern.js vendor-node/@testing-library/svelte/src/core/modern.js
--- node_modules/@testing-library/svelte/src/core/modern.js	1970-01-01 00:00:00.000000000 +0000
+++ vendor-node/@testing-library/svelte/src/core/modern.js	2024-12-07 18:09:13.461839416 +0000
@@ -0,0 +1,58 @@
+/* modern.svelte.js generated by Svelte v5.2.8 */
+import * as $ from "svelte/internal/client";
+/**
+ * Modern rendering core for svelte-testing-library.
+ *
+ * Supports Svelte >= 5.
+ */
+import * as Svelte from 'svelte/client';
+
+/** Props signals for each rendered component. */
+const propsByComponent = new Map();
+/** Whether we're using Svelte >= 5. */
+const IS_MODERN_SVELTE = typeof Svelte.mount === 'function';
+
+/** Allowed options to the `mount` call. */
+const allowedOptions = [
+	'target',
+	'anchor',
+	'props',
+	'events',
+	'context',
+	'intro'
+];
+
+/** Mount the component into the DOM. */
+const mount = (Component, options) => {
+	const props = $.proxy(options.props ?? {});
+	const component = Svelte.mount(Component, { ...options, props });
+
+	Svelte.flushSync();
+	propsByComponent.set(component, props);
+	return component;
+};
+
+/** Remove the component from the DOM. */
+const unmount = (component) => {
+	propsByComponent.delete(component);
+	Svelte.flushSync(() => Svelte.unmount(component));
+};
+
+/**
+ * Update the component's props.
+ *
+ * Relies on the `$state` signal added in `mount`.
+ */
+const updateProps = (component, nextProps) => {
+	const prevProps = propsByComponent.get(component);
+
+	Object.assign(prevProps, nextProps);
+};
+
+export {
+	allowedOptions,
+	IS_MODERN_SVELTE,
+	mount,
+	unmount,
+	updateProps
+};
\ No newline at end of file
