name: Job setup
description: Sets up direnv and nix, and installs all dependencies

runs:
  using: "composite"
  steps:
    - name: Install Nix
      uses: nixbuild/nix-quick-install-action@v30 # WHY DO I HAVE TO USE NIX INSTEAD OF LIX
      #uses: fabrictest/action-setup-lix@v0.15.0
      #with:
      #  lix-on-tmpfs: true
      #uses: samueldr/lix-gha-installer-action@v2025-02-26.prerelease

    - name: Cache Nix Store and Deno
      uses: nix-community/cache-nix-action@v6
      with:
        primary-key: nix-${{ runner.os }}-${{ hashFiles('**/*.nix', '**/flake.lock', './uv.lock', './deno.lock') }}
        restore-prefixes-first-match: nix-${{ runner.os }}-
        gc-max-store-size-linux: 1073741824
        purge: true
        purge-prefixes: nix-${{ runner.os }}-
        purge-created: 0
        purge-primary-key: never
        paths: |
          ~/.deno
          ~/.cache/deno/

    - name: Install direnv
      shell: bash
      run: nix profile install nixpkgs#direnv

    - name: Set up .env
      shell: bash
      run: cp .env.example .env

    - name: Allow direnv
      shell: bash
      run: direnv allow .

    - name: Load PATH changes
      shell: bash
      run: direnv exec . sh -c 'echo $PATH' > "$GITHUB_PATH"
    - name: Load other environment changes
      shell: bash
      run: direnv export gha >> "$GITHUB_ENV"

    - name: Install packages
      shell: bash
      run: just install
